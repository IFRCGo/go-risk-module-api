# Generated by Django 3.2.11 on 2022-01-28 05:15

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('common', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Idmc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country', models.CharField(max_length=255, verbose_name='country')),
                ('iso3', models.CharField(blank=True, max_length=3, null=True, verbose_name='iso3')),
                ('hazard_type', models.CharField(blank=True, choices=[('EQ', 'Earthquake'), ('FL', 'Flood'), ('TC', 'Cyclone'), ('EP', 'Epidemic'), ('FI', 'Food Insecurity'), ('SS', 'Storm Surge'), ('DR', 'Drought'), ('TS', 'Tsunami'), ('CD', 'Cyclonic Wind')], max_length=100, null=True, verbose_name='hazard type')),
                ('confidence_type', models.CharField(blank=True, choices=[('high', 'High'), ('medium', 'Medium'), ('low', 'Low'), ('undefined', 'Undefined')], max_length=100, verbose_name='confidence type')),
                ('note', models.TextField(blank=True, null=True, verbose_name='note')),
                ('annual_average_displacement', models.FloatField(blank=True, null=True, verbose_name='annual average displacement')),
                ('january', models.FloatField(blank=True, null=True, verbose_name='january')),
                ('february', models.FloatField(blank=True, null=True, verbose_name='february')),
                ('march', models.FloatField(blank=True, null=True, verbose_name='march')),
                ('april', models.FloatField(blank=True, null=True, verbose_name='april')),
                ('may', models.FloatField(blank=True, null=True, verbose_name='may')),
                ('june', models.FloatField(blank=True, null=True, verbose_name='june')),
                ('july', models.FloatField(blank=True, null=True, verbose_name='july')),
                ('august', models.FloatField(blank=True, null=True, verbose_name='august')),
                ('september', models.FloatField(blank=True, null=True, verbose_name='september')),
                ('october', models.FloatField(blank=True, null=True, verbose_name='october')),
                ('november', models.FloatField(blank=True, null=True, verbose_name='november')),
                ('december', models.FloatField(blank=True, null=True, verbose_name='december')),
            ],
        ),
        migrations.CreateModel(
            name='ThinkHazardCountry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('country_id', models.CharField(max_length=255, verbose_name='country')),
                ('name', models.CharField(max_length=255, verbose_name='name')),
                ('iso3', models.CharField(blank=True, max_length=3, null=True, verbose_name='iso3')),
            ],
        ),
        migrations.CreateModel(
            name='ThinkHazardInformation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hazard_level', models.CharField(choices=[('low', 'Low'), ('very low', 'Very Low'), ('medium', 'Medium'), ('high', 'High')], max_length=100, verbose_name='hazard level')),
                ('information', models.TextField(verbose_name='information')),
                ('hazard_type', models.CharField(blank=True, choices=[('EQ', 'Earthquake'), ('FL', 'Flood'), ('TC', 'Cyclone'), ('EP', 'Epidemic'), ('FI', 'Food Insecurity'), ('SS', 'Storm Surge'), ('DR', 'Drought'), ('TS', 'Tsunami'), ('CD', 'Cyclonic Wind')], max_length=100, verbose_name='hazard type')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.country')),
            ],
        ),
        migrations.CreateModel(
            name='IpcMonthly',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('analysis_date', models.DateField(blank=True, null=True, verbose_name='analysis date')),
                ('phase_population', models.IntegerField(null=True, verbose_name='phase population')),
                ('projected_phase_population', models.IntegerField(null=True, verbose_name='projected phase population')),
                ('census_population', models.IntegerField(verbose_name='census population')),
                ('hazard_type', models.CharField(blank=True, choices=[('EQ', 'Earthquake'), ('FL', 'Flood'), ('TC', 'Cyclone'), ('EP', 'Epidemic'), ('FI', 'Food Insecurity'), ('SS', 'Storm Surge'), ('DR', 'Drought'), ('TS', 'Tsunami'), ('CD', 'Cyclonic Wind')], max_length=100, verbose_name='hazard type')),
                ('year', models.IntegerField(verbose_name='year')),
                ('month', models.IntegerField(verbose_name='month')),
                ('estimation_type', models.CharField(blank=True, choices=[('current', 'Current'), ('first_projection', 'First Projection'), ('second_projection', 'Second Projection')], max_length=100, verbose_name='estimation type')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.country', verbose_name='country')),
            ],
        ),
        migrations.CreateModel(
            name='Ipc',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True, verbose_name='title')),
                ('analysis_date', models.DateField(blank=True, null=True, verbose_name='analysis date')),
                ('phase_population', models.IntegerField(verbose_name='phase population')),
                ('projected_phase_population', models.IntegerField(null=True, verbose_name='projected phase population')),
                ('census_population', models.IntegerField(verbose_name='census population')),
                ('current_period_start_date', models.DateField(blank=True, null=True, verbose_name='current period start date')),
                ('current_period_end_date', models.DateField(blank=True, null=True, verbose_name='current period end date')),
                ('projected_period_start_date', models.DateField(blank=True, null=True, verbose_name='projected period start date')),
                ('projected_period_end_date', models.DateField(blank=True, null=True, verbose_name='projected period end date')),
                ('hazard_type', models.CharField(blank=True, choices=[('EQ', 'Earthquake'), ('FL', 'Flood'), ('TC', 'Cyclone'), ('EP', 'Epidemic'), ('FI', 'Food Insecurity'), ('SS', 'Storm Surge'), ('DR', 'Drought'), ('TS', 'Tsunami'), ('CD', 'Cyclonic Wind')], max_length=100, verbose_name='hazard type')),
                ('is_projected', models.BooleanField(default=False, verbose_name='is projected')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.country', verbose_name='country')),
            ],
        ),
        migrations.CreateModel(
            name='InformRiskSeasonal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hazard_type', models.CharField(blank=True, choices=[('EQ', 'Earthquake'), ('FL', 'Flood'), ('TC', 'Cyclone'), ('EP', 'Epidemic'), ('FI', 'Food Insecurity'), ('SS', 'Storm Surge'), ('DR', 'Drought'), ('TS', 'Tsunami'), ('CD', 'Cyclonic Wind')], max_length=100, verbose_name='hazard type')),
                ('january', models.FloatField(blank=True, null=True, verbose_name='january')),
                ('february', models.FloatField(blank=True, null=True, verbose_name='february')),
                ('march', models.FloatField(blank=True, null=True, verbose_name='march')),
                ('april', models.FloatField(blank=True, null=True, verbose_name='april')),
                ('may', models.FloatField(blank=True, null=True, verbose_name='may')),
                ('june', models.FloatField(blank=True, null=True, verbose_name='june')),
                ('july', models.FloatField(blank=True, null=True, verbose_name='july')),
                ('august', models.FloatField(blank=True, null=True, verbose_name='august')),
                ('september', models.FloatField(blank=True, null=True, verbose_name='september')),
                ('october', models.FloatField(blank=True, null=True, verbose_name='october')),
                ('november', models.FloatField(blank=True, null=True, verbose_name='november')),
                ('december', models.FloatField(blank=True, null=True, verbose_name='december')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.country', verbose_name='country')),
            ],
        ),
        migrations.CreateModel(
            name='InformRisk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hazard_type', models.CharField(blank=True, choices=[('EQ', 'Earthquake'), ('FL', 'Flood'), ('TC', 'Cyclone'), ('EP', 'Epidemic'), ('FI', 'Food Insecurity'), ('SS', 'Storm Surge'), ('DR', 'Drought'), ('TS', 'Tsunami'), ('CD', 'Cyclonic Wind')], max_length=100, verbose_name='hazard type')),
                ('risk_score', models.FloatField(blank=True, null=True, verbose_name='risk_score')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.country', verbose_name='country')),
            ],
        ),
        migrations.CreateModel(
            name='IdmcSuddenOnset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hazard_type', models.CharField(blank=True, choices=[('EQ', 'Earthquake'), ('FL', 'Flood'), ('TC', 'Cyclone'), ('EP', 'Epidemic'), ('FI', 'Food Insecurity'), ('SS', 'Storm Surge'), ('DR', 'Drought'), ('TS', 'Tsunami'), ('CD', 'Cyclonic Wind')], max_length=100, verbose_name='hazard type')),
                ('annual_average_displacement', models.IntegerField(blank=True, null=True, verbose_name='annual average displacement')),
                ('return_period_20_years', models.IntegerField(blank=True, null=True, verbose_name='return period 20 years')),
                ('return_period_50_years', models.IntegerField(blank=True, null=True, verbose_name='return period 50 years')),
                ('return_period_100_years', models.IntegerField(blank=True, null=True, verbose_name='return period 100 years')),
                ('return_period_250_years', models.IntegerField(blank=True, null=True, verbose_name='return period 250 years')),
                ('return_period_1000_years', models.IntegerField(blank=True, null=True, verbose_name='return period 1000 years')),
                ('return_period_1500_years', models.IntegerField(blank=True, null=True, verbose_name='return period 1500 years')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.country', verbose_name='country')),
            ],
        ),
        migrations.CreateModel(
            name='GlobalDisplacement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hazard_type', models.CharField(blank=True, choices=[('EQ', 'Earthquake'), ('FL', 'Flood'), ('TC', 'Cyclone'), ('EP', 'Epidemic'), ('FI', 'Food Insecurity'), ('SS', 'Storm Surge'), ('DR', 'Drought'), ('TS', 'Tsunami'), ('CD', 'Cyclonic Wind')], max_length=100, verbose_name='hazard type')),
                ('total_displacement', models.IntegerField(blank=True, null=True, verbose_name='total displacement')),
                ('year', models.IntegerField(verbose_name='year')),
                ('month', models.IntegerField(verbose_name='month')),
                ('analysis_date', models.DateField(blank=True, null=True, verbose_name='analysis date')),
                ('estimation_type', models.CharField(blank=True, choices=[('current', 'Current'), ('first_projection', 'First Projection'), ('second_projection', 'Second Projection')], max_length=100, verbose_name='estimation type')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.country', verbose_name='country')),
            ],
        ),
        migrations.CreateModel(
            name='GarHazardDisplacement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hazard_type', models.CharField(blank=True, choices=[('EQ', 'Earthquake'), ('FL', 'Flood'), ('TC', 'Cyclone'), ('EP', 'Epidemic'), ('FI', 'Food Insecurity'), ('SS', 'Storm Surge'), ('DR', 'Drought'), ('TS', 'Tsunami'), ('CD', 'Cyclonic Wind')], max_length=100, verbose_name='hazard type')),
                ('economic_loss_return_period_20_years', models.FloatField(blank=True, null=True, verbose_name='economic loss return period 20 years')),
                ('economic_loss_return_period_50_years', models.FloatField(blank=True, null=True, verbose_name='economic loss return period 50 years')),
                ('economic_loss_return_period_100_years', models.FloatField(blank=True, null=True, verbose_name='economic loss return period 100 years')),
                ('economic_loss_return_period_250_years', models.FloatField(blank=True, null=True, verbose_name='economic loss return period 250 years')),
                ('economic_loss_return_period_500_years', models.FloatField(blank=True, null=True, verbose_name='economic loss return period 500 years')),
                ('population_exposure_return_period_25_years', models.FloatField(blank=True, null=True, verbose_name='population exposure return period 25 years')),
                ('population_exposure_return_period_50_years', models.FloatField(blank=True, null=True, verbose_name='population exposure return period 50 years')),
                ('population_exposure_return_period_100_years', models.FloatField(blank=True, null=True, verbose_name='population exposure return period 100 years')),
                ('population_exposure_return_period_200_years', models.FloatField(blank=True, null=True, verbose_name='population exposure return period 250 years')),
                ('population_exposure_return_period_500_years', models.FloatField(blank=True, null=True, verbose_name='population exposure return period 500 years')),
                ('population_exposure_return_period_1000_years', models.FloatField(blank=True, null=True, verbose_name='population exposure return period 1000 years')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.country', verbose_name='country')),
            ],
        ),
        migrations.CreateModel(
            name='GarHazard',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hazard_type', models.CharField(blank=True, choices=[('EQ', 'Earthquake'), ('FL', 'Flood'), ('TC', 'Cyclone'), ('EP', 'Epidemic'), ('FI', 'Food Insecurity'), ('SS', 'Storm Surge'), ('DR', 'Drought'), ('TS', 'Tsunami'), ('CD', 'Cyclonic Wind')], max_length=100, verbose_name='hazard type')),
                ('return_period_20_years', models.FloatField(blank=True, null=True, verbose_name='return period 20 years')),
                ('return_period_25_years', models.FloatField(blank=True, null=True, verbose_name='return period 25 years')),
                ('return_period_50_years', models.FloatField(blank=True, null=True, verbose_name='return period 50 years')),
                ('return_period_100_years', models.FloatField(blank=True, null=True, verbose_name='return period 100 years')),
                ('return_period_250_years', models.FloatField(blank=True, null=True, verbose_name='return period 250 years')),
                ('return_period_500_years', models.FloatField(blank=True, null=True, verbose_name='return period 500 years')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='common.country', verbose_name='country')),
            ],
        ),
        migrations.CreateModel(
            name='DisplacementData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('iso3', models.CharField(blank=True, max_length=3, null=True, verbose_name='iso3')),
                ('hazard_type', models.CharField(blank=True, choices=[('EQ', 'Earthquake'), ('FL', 'Flood'), ('TC', 'Cyclone'), ('EP', 'Epidemic'), ('FI', 'Food Insecurity'), ('SS', 'Storm Surge'), ('DR', 'Drought'), ('TS', 'Tsunami'), ('CD', 'Cyclonic Wind')], max_length=100, null=True, verbose_name='hazard type')),
                ('note', models.TextField(blank=True, null=True, verbose_name='note')),
                ('annual_average_displacement', models.FloatField(blank=True, null=True, verbose_name='annual average displacement')),
                ('january', models.FloatField(blank=True, null=True, verbose_name='january')),
                ('february', models.FloatField(blank=True, null=True, verbose_name='february')),
                ('march', models.FloatField(blank=True, null=True, verbose_name='march')),
                ('april', models.FloatField(blank=True, null=True, verbose_name='april')),
                ('may', models.FloatField(blank=True, null=True, verbose_name='may')),
                ('june', models.FloatField(blank=True, null=True, verbose_name='june')),
                ('july', models.FloatField(blank=True, null=True, verbose_name='july')),
                ('august', models.FloatField(blank=True, null=True, verbose_name='august')),
                ('september', models.FloatField(blank=True, null=True, verbose_name='september')),
                ('october', models.FloatField(blank=True, null=True, verbose_name='october')),
                ('november', models.FloatField(blank=True, null=True, verbose_name='november')),
                ('december', models.FloatField(blank=True, null=True, verbose_name='december')),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='common.country')),
            ],
        ),
    ]
