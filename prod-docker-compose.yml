version: "3.7"

x-server: &base_server_setup
  image: risk-module:latest
  build:
    context: .
  restart: unless-stopped
  environment:
    RISK_ENVIRONMENT: ${RISK_ENVIRONMENT:-PROD}
    RISK_API_FQDN: ${RISK_API_FQDN?error}
    DJANGO_DEBUG: ${DJANGO_DEBUG:-False}
    DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY?error}
    # Database
    DATABASE_NAME: ${DATABASE_NAME:-postgres}
    DATABASE_USER: ${DATABASE_USER:-postgres}
    DATABASE_PASSWORD: ${DATABASE_PASSWORD:-postgres}
    DATABASE_HOST: ${DATABASE_HOST:-db}
    DATABASE_PORT: ${DATABASE_PORT:-5432}
    # Redis
    CELERY_REDIS_URL: ${CELERY_REDIS_URL:-redis://redis:6379/0}
    CACHE_REDIS_URL: ${CELERY_REDIS_URL:-redis://redis:6379/1}
    # PDC
    PDC_USERNAME: ${PDC_USERNAME?error}
    PDC_PASSWORD: ${PDC_PASSWORD?error}
    PDC_ACCESS_TOKEN: ${PDC_ACCESS_TOKEN?error}
    # Meteoswiss
    METEOSWISS_S3_ENDPOINT_URL: ${METEOSWISS_S3_ENDPOINT_URL?error}
    METEOSWISS_S3_BUCKET: ${METEOSWISS_S3_BUCKET?error}
    METEOSWISS_S3_ACCESS_KEY: ${METEOSWISS_S3_ACCESS_KEY?error}
    METEOSWISS_S3_SECRET_KEY: ${METEOSWISS_S3_SECRET_KEY?error}
  env_file:
    # NOTE: Pass additional environment using .env
    - .env
  volumes:
    # TODO: Remove host volume for code
    - .:/code
    - ipython_data_local:/root/.ipython/profile_default   # persist ipython data, including ipython history
  depends_on:
    - db
    - redis


services:
  db:
    image: postgres:12.0-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_DATABASE=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    restart: unless-stopped
    volumes:
      - redis-data:/redis_data

  server:
    <<: *base_server_setup
    command: bash -c "/code/scripts/run_prod.sh"

  celery-beat:
    <<: *base_server_setup
    command: bash -c "/code/scripts/run_worker_beat.sh"

  celery:
    <<: *base_server_setup
    command: bash -c "/code/scripts/run_worker.sh"
    deploy:  # TODO: Fix memory leak
      resources:
        limits:
          memory: 10GB

  caddy:
    image: caddy:2.4.6
    restart: unless-stopped
    environment:
      CADDY_EMAIL: ${CADDY_EMAIL?err}
      CADDY_HOST_DOMAIN_AZURE: ${CADDY_HOST_DOMAIN_AZURE?err}
      CADDY_HOST_DOMAIN_IFRC: ${CADDY_HOST_DOMAIN_IFRC?err}
    volumes:
      # risk module volumes
      - ./storage/static/:/go-risk-module-api/static/
      - ./storage/media/:/go-risk-module-api/media/
      # Caddyfile volumes
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./caddy/certs:/etc/ssl/caddy/:ro
      - caddy_data:/data
      - caddy_config:/config
    ports:
      - "${CADDY_HTTP_PORT:-80}:80"
      - "${CADDY_HTTPS_PORT:-443}:443"

volumes:
  caddy_data:
  caddy_config:
  postgres-data:
  redis-data:
  ipython_data_local:
