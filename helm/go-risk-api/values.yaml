image:
  repository: ghcr.io/ifrcgo/go-risk-module-api
  pullPolicy: IfNotPresent
  tag: "test"

nameOverride: ""
fullnameOverride: ""

imagePullSecrets:
  - name: ghcr-secret

appConfig:
  DJANGO_DEBUG: "True"
  METEOSWISS_S3_BUCKET: some-bucket
  METEOSWISS_S3_ENDPOINT_URL: "https://s3.amazonaws.com"
  PDC_USERNAME: pdc-username
  RISK_ENVIRONMENT: development
  RISK_API_FQDN: "go-risk-module.ifrc.org"

appSecret:
  name: ""
  keys:
    - DATABASE_PASSWORD
    - DJANGO_SECRET_KEY
    - METEOSWISS_S3_ACCESS_KEY
    - METEOSWISS_S3_BUCKET
    - METEOSWISS_S3_SECRET_KEY
    - PDC_ACCESS_TOKEN
    - PDC_PASSWORD

# Subchart configuration
postgresql:
  enabled: true
  fullnameOverride: ""

redis:
  enabled: true
  auth:
    enabled: false
  architecture: standalone
  replica:
    replicaCount: 0

# Global configurations are required for consistency across the chart and its subcharts
global:
  postgresql:
    auth:
      username: ""
      database: ""
      existingSecret: some-risk-module-secret
      secretKeys:
        userPasswordKey: DATABASE_PASSWORD
        adminPasswordKey: DATABASE_PASSWORD
#        replicationPasswordKey: DATABASE_PASSWORD
    service:
      ports:
        postgresql: 5432

# Connection parameters for external PostgreSQL database
externalDatabase:
  host: ""
  port: 5432
  auth:
    username:
    database:
    existingSecret:
    secretKeys:
      userPasswordKey:

# Connection parameters for external Redis
externalRedis:
  host: ""
  port: 6379

azure:
  aksSecretsProviderAvailable: false
  keyvault:
    name: risk-module-key-vault
    clientId: "jkl-asdfak-asdfasdf-asdfasd"
    tenantId: "asdfa-asdfasd-asdfasdfadfas"

serviceAccount:
  # Specifies whether a service account should be created
  # Required when using workload identity to access Azure Key Vault Secrets
  create: false
  automount: true
  annotations:
    azure.workload.identity/client-id : <azure_client_id>
  labels:
    azure.workload.identity/use: "true"
  name: ""